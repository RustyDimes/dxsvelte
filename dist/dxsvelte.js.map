{
  "version": 3,
  "sources": ["../src/dxsvelte.ts", "../src/django.ts", "../src/python.ts"],
  "sourcesContent": ["import { Plugin } from 'vite'\nimport { svelte } from '@sveltejs/vite-plugin-svelte'\nimport { build as esbuild } from 'esbuild'\nimport { getDjangoRouter } from './django'\nimport { getPythonCommand } from './python'\nimport { randomUUID } from 'crypto'\nimport { promises, readFileSync, writeFileSync, existsSync, mkdirSync } from 'fs'\nimport { dirname, resolve } from 'path'\nimport { fileURLToPath } from 'url'\nimport { exec as execCallback, execSync } from 'child_process'\nimport { promisify } from 'util'\n\nimport { Stats, unlinkSync, promises as fsPromises } from 'fs'\nimport { join } from 'path'\nimport * as path from 'path'\n\nconst { stat } = promises\n\nimport type { Config, ConfigOptions, Route, ViewComponentConfig } from './types'\n\nconst moduleDirectory = dirname(fileURLToPath(import.meta.url))\n\ninterface IVirtualFileModificationIndex {\n  [key: string]: string\n}\n\ninterface ResolveIdOptions {\n  assertions: Record<string, string>;\n  custom?: any | undefined;\n  ssr?: boolean | undefined;\n  isEntry: boolean;\n}\n\nconst virtualFileModificationIndex: IVirtualFileModificationIndex = {}\n\nasync function getFileTimestamps(filePath: string): Promise<{ created: Date; modified: Date }> {\n  try {\n    const { birthtime: created, mtime: modified }: Stats = await fsPromises.stat(filePath)\n    return { created, modified }\n  } catch (error) {\n    console.error(`Error indexing modification metadata for file: ${filePath}.`)\n    throw new Error(`Indexing modification failure: ${error}.`)\n  }\n}\n\nconst baseDirectory = resolve(process.cwd())\n\nlet mainAppName: string | null = null\n\nfunction initMainAppName() {\n  const rxFunctionString = /os\\.environ\\.setdefault\\(\\s*(\"DJANGO_SETTINGS_MODULE\"|'DJANGO_SETTINGS_MODULE')\\s*,\\s*(\"(.+)\\.settings\"|'(.+)\\.settings')\\)/\n  const settingsStr = readFileSync(join(baseDirectory, 'manage.py'), 'utf8')\n  const settingsStrExtract = settingsStr.match(rxFunctionString) ?? []\n  const settingsModuleExtract = settingsStrExtract?.length > 3 ? settingsStrExtract[2].replaceAll('\"', '').replaceAll(\"'\", '') : ''\n  if (settingsModuleExtract === '') {\n    throw new Error('Could not extract settings from manage.py. Exiting.')\n  }\n  const mainModuleExtract = settingsModuleExtract.split('.')\n  const mainModuleStr = mainModuleExtract[0]\n  mainAppName = mainModuleStr\n}\nfunction getMainAppName() {\n  if (!mainAppName) {\n    initMainAppName()\n  }\n  return mainAppName\n}\n\nfunction evaluateConfig(proposed: ConfigOptions | null) {\n  const config: ConfigOptions = {}\n  if (proposed === null) {\n    proposed = {}\n  }\n  config.python = proposed.python ?? getPythonCommand() ?? 'python3'\n  config.django = proposed.django ?? `${config.python} ./manage.py runserver 0.0.0.0:8000`\n  config.baseDirectory = proposed.baseDirectory ?? resolve(process.cwd())\n  config.mainApp = proposed.mainApp ?? getMainAppName()!\n  config.views = proposed.views ?? 'views'\n  return config as Config\n}\n\nfunction reduceConfig(proposed: ConfigOptions | null) {\n  if (!proposed) {\n    return undefined\n  }\n\n  const dxsvelteConfigKeys = ['python', 'django', 'baseDirectory', 'mainApp', 'views']\n\n  dxsvelteConfigKeys.forEach((key) => {\n    if (key in proposed) {\n      // @ts-expect-error\n      delete proposed[key]\n    }\n  })\n\n  return proposed\n}\n\nfunction splitStringAfterQuestionMark(str: string) {\n  const index = str.indexOf('?')\n  return index >= 0 ? str.slice(index + 1) : ''\n}\n\nfunction onDisk(path: string) {\n  try {\n    return existsSync(path)\n  } catch (_) {\n    return false\n  }\n}\n\nfunction writeReport(data: object): void {\n  const filePath = './report.json'\n  try {\n    const json = JSON.stringify(data, null, 2)\n    writeFileSync(filePath, json)\n  } catch (_) {}\n}\n\nfunction makeDirectory(dest: string) {\n  try {\n    mkdirSync(dest, { recursive: true })\n  } catch (_) {}\n}\n\nfunction relPath(importPath: string) {\n  return join(moduleDirectory, importPath)\n}\n\nfunction virtualFileViews(router: Route[]) {\n  const viewImports = router.map(({ component, filename }) => `import ${component} from \"${filename}\"`).join(';\\n')\n  const viewComponents = router.map(({ path, component }) => ({ path, component }))\n  return `${viewImports}; export const viewComponents = ${JSON.stringify(viewComponents)};`\n}\n\nfunction virtualFileRoutesStatic(router: Route[]) {\n  return `export default ${JSON.stringify(router.map((item) => ({ path: item.path, static: item.static })))};`\n}\n\nfunction virtualFilePage(idQualifiedPath: string, router: Route[]) {\n  const route = router.find((item) => item.filename === idQualifiedPath)\n  if (!route) {\n    console.error({ idQualifiedPath, router })\n    throw new Error('Failed to generate @page module for view state.')\n  }\n  return `import core from '@dxsvelte:router'\n  const route = \"${route.path}\"\n  export const ServerSideProps = core.serverDataStore[route].data\n  export default { ServerSideProps }`\n}\n\nexport function dxsvelteVitePlugin(proposed?: ConfigOptions|null): Plugin[] {\n  const config = evaluateConfig(proposed ?? null)\n  const svelteConfig = reduceConfig(proposed ?? null)\n  let router: Route[] = []\n\n  const rfilesObj = {\n    '@dxsvelte:app': relPath('./core-static/app.svelte'),\n    '@dxsvelte:layout': relPath('./core-static/layout.svelte'),\n    '@dxsvelte:router': relPath('./core-static/router.ts'),\n    '@dxsvelte:csr': relPath('./core-static/entrypoint-csr.js'),\n    '@dxsvelte:ssr': relPath('./core-static/entrypoint-ssr.js'),\n    '@common': relPath('./core-static/common.ts')\n  }\n\n  const vfilesObj = {\n    '@dxsvelte:routesStatic': (router: Route[]) => `export default ${JSON.stringify(router.map((item) => ({ path: item.path, static: item.static })))};`,\n    '@dxsvelte:views': (router: Route[]) => {\n      function makeComponentObj(path: string, component: string) {\n        return `{ path: \"${path}\", component: ${component} }`\n      }\n      return `${router.map(({ component, filename }) => `import ${component} from \"${filename}\"`).join(';\\n')}; export const viewComponents = [${router\n        .map(({ path, component }) => makeComponentObj(path, component!))\n        .join(', ')}];`\n    }\n  }\n\n  return [\n    {\n\n      name: 'vite-dxsvelte',\n\n      options(options: any) {\n        router = getDjangoRouter(config)\n        return options\n      },\n\n      resolveId(id: PropertyKey, importer: string | undefined, options: ResolveIdOptions) {\n        if (typeof id !== 'string') {\n          return undefined\n        }\n\n        if (id === '@dxsvelte:layout') {\n          const mainLayoutPath = join(config.baseDirectory, config.mainApp, 'layout.svelte')\n          try {\n            if (existsSync(mainLayoutPath)) {\n              return mainLayoutPath\n            }\n          } catch (_) {}\n        }\n\n        if (rfilesObj.hasOwnProperty(id)) {\n          // @ts-expect-error\n          return rfilesObj[id]\n        }\n\n        if (vfilesObj.hasOwnProperty(id)) {\n          return id\n        }\n\n        // We handle the @page import resolution a little differently to the rest\n        if (typeof importer !== 'string') {\n          return undefined\n        }\n        const idQualifiedImporterPath = path.resolve(importer)\n        if (id === '@page') {\n          return `@page?${idQualifiedImporterPath}`\n        }\n      },\n\n      load(id: string) {\n        if (typeof id !== 'string') {\n          return undefined\n        }\n        // Generate the @page modules\n        if (id.startsWith('@page?')) {\n          const idQualifiedPath = splitStringAfterQuestionMark(id)\n          return virtualFilePage(idQualifiedPath, router)\n        }\n\n        // Handle the remainder of the virtual files here\n        if (vfilesObj.hasOwnProperty(id)) {\n          // @ts-expect-error\n          return vfilesObj[id](router)\n        }\n      }\n    },\n    svelte() as unknown as Plugin\n  ]\n}\n\nexport function dxsvelte(options: any | null | undefined): ConfigOptions {\n  const isBuild = process.argv.includes('build');\n  const ssr = process.argv.includes('--ssr');\n  const csr = !ssr;\n\n  // Common Initialisations\n\n  if (typeof options === 'undefined' || options === null) options = {}\n  if (typeof options.build === 'undefined' || options.build === null) options.build = {}\n  if (typeof options.build.rollupOptions === 'undefined' || options.build.rollupOptions === null) options.build.rollupOptions = {}\n  if (typeof options.plugins === \"undefined\" || options.plugins === null || (Array.isArray(options.plugins) && options.plugins.length === 0)) {\n    options.plugins = [dxsvelteVitePlugin()]\n  }\n\n  if (isBuild && ssr) {\n    options.build.minify = options.build.minify ?? false\n\n    if (typeof options.ssr !== 'object' || !options.ssr) options.ssr = {}\n\n    if (!options.build.rollupOptions.output) {\n      options.build.rollupOptions.output = {}\n    }\n\n    if (!options.build.rollupOptions.output.dir || typeof options.build.rollupOptions.output.dir !== 'string') {\n      options.build.rollupOptions.output.dir = `./${getMainAppName()}/app`\n    }\n\n    if (typeof options.build.rollupOptions.input !== 'string') {\n      options.build.rollupOptions.input = '@dxsvelte:ssr'\n    }\n\n    const ssrOptions = {\n      target: 'webworker',\n      noExternal: true,\n      entry: '@dxsvelte:ssr',\n    }\n\n    options.ssr = {\n      ...ssrOptions,\n      ...options.ssr\n    }\n\n  }\n\n  if (isBuild && csr) {\n    options.build.minify = typeof options.build.minify === 'boolean' ? options.build.minify : true\n\n    if (!options.build.rollupOptions.input || typeof options.build.rollupOptions.input !== 'object') {\n      options.build.rollupOptions.input = { 'bundle.csr':  '@dxsvelte:csr' }\n    }\n\n    if (!options.build.rollupOptions.output || typeof options.build.rollupOptions.output !== 'object') {\n      options.build.rollupOptions.output = { dir: `./static/app` }\n    }\n\n  }\n\n  if (!isBuild && csr) {\n\n    if (!options.build.rollupOptions.input || typeof options.build.rollupOptions.input !== 'object') {\n      options.build.rollupOptions.input = '@dxsvelte:csr'\n    }\n    \n  }\n\n  return options\n}\n\nexport default { dxsvelteVitePlugin, dxsvelte }\n", "import type { Config, Pattern, Resolver, Route, RouteObject } from './types'\r\nimport { execSync, spawnSync } from 'child_process'\r\nimport { dirname, join } from 'path'\r\nimport { fileURLToPath } from 'url'\r\n\r\nconst routerResolverPy = String.raw`#!/usr/bin/python3\r\nimport os\r\nimport sys\r\nimport django\r\nfrom django.urls import get_resolver, URLPattern, URLResolver\r\nfrom django.urls.resolvers import RoutePattern\r\nimport json\r\nimport base64\r\nimport re\r\n\r\nsys.path.append(os.getcwd())\r\n\r\nwith open('manage.py', 'r') as f:\r\n    manage_py_content = f.read()\r\n\r\npattern = r\"os\\.environ\\.setdefault\\(['\\\"]DJANGO_SETTINGS_MODULE['\\\"]\\s*,\\s*(['\\\"].+['\\\"])\"\r\nmatch = re.search(pattern, manage_py_content)\r\nproject_settings = match.group(1).strip('\"').strip(\"'\")\r\n\r\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', project_settings)\r\ndjango.setup()\r\n\r\ndelimiter = '===DXSVELTE_DELIMITER==='\r\n\r\ndef get_urls_json():\r\n    resolver = get_resolver()\r\n    url_patterns = []\r\n\r\n    class DjangoJSONEncoder(json.JSONEncoder):\r\n        def default(self, obj):\r\n            if isinstance(obj, RoutePattern):\r\n                return str(obj)\r\n            elif isinstance(obj, re.Pattern):\r\n                return obj.pattern\r\n            elif hasattr(obj, '__dict__'):\r\n                return vars(obj)\r\n            return super().default(obj)\r\n\r\n    def strip_prefix(obj):\r\n        text = str(obj)\r\n        regex = '\\w+(\\.\\w+)*(?= at|\\sof)'\r\n        output = \"\"\r\n        match = re.search(regex, text)\r\n        if match != None:\r\n            output = match.group()\r\n        return output\r\n\r\n    def get_app_path(url_resolver):\r\n        if isinstance(url_resolver, URLResolver) and url_resolver.url_patterns and len(url_resolver.url_patterns) > 0 and isinstance(url_resolver.url_patterns[0], URLPattern):\r\n            return url_resolver.url_patterns[0].lookup_str.split('.')[0]\r\n        else:\r\n            return None\r\n\r\n    def has_static_view_decorator(func):\r\n        return hasattr(func, 'is_static_view') and func.is_static_view\r\n\r\n    def convert_url_pattern(pattern):\r\n        if hasattr(pattern, 'url_patterns'):\r\n            # URLResolver\r\n            return {\r\n                'type': 'resolver',\r\n                'app_name': pattern.app_name,\r\n                'namespace': pattern.namespace,\r\n                'url_patterns': [convert_url_pattern(p) for p in pattern.url_patterns],\r\n                'prefix': pattern.pattern,\r\n                'app_path': get_app_path(pattern)\r\n            }\r\n        else:\r\n            # URLPattern\r\n            return {\r\n                'type': 'pattern',\r\n                'pattern': pattern.pattern,\r\n                'name': pattern.name,\r\n                'lookup_str': pattern.lookup_str,\r\n                'callback': strip_prefix(pattern.callback),\r\n                'static_view': has_static_view_decorator(pattern.callback)\r\n            }\r\n\r\n    for pattern in resolver.url_patterns:\r\n        url_patterns.append(convert_url_pattern(pattern))\r\n\r\n    return json.dumps(url_patterns, cls=DjangoJSONEncoder)\r\n\r\noutput = get_urls_json()\r\nencoded_output = base64.b64encode(output.encode('utf-8')).decode('utf-8')\r\n\r\nsys.stdout.write(f'{delimiter}{encoded_output}{delimiter}')\r\nsys.stdout.flush()`\r\n\r\nfunction extract(str: string) {\r\n  const delimiter = '===DXSVELTE_DELIMITER==='\r\n  const regex = new RegExp(`${delimiter}(.*?)${delimiter}`)\r\n  const match = str.match(regex)\r\n  if (typeof match === 'undefined' || match === null) {\r\n    throw new Error ('Router resolver Python response mangled.')\r\n  }\r\n  return match[1]\r\n}\r\n\r\nfunction runPythonResolverScript(config: Config): string {\r\n  const command = config.python ?? 'python3'\r\n  const { stdout, stderr, status } = spawnSync(process.env.SHELL!, ['-c', command], { input: routerResolverPy, encoding: 'utf-8' })\r\n  if (status === 0) {\r\n    try {\r\n      const encodedJsonString = extract(stdout)\r\n      const encodedJsonBuffer = Buffer.from(encodedJsonString, 'base64')\r\n      const decodedJsonBuffer = encodedJsonBuffer.toString('utf-8')\r\n      return decodedJsonBuffer\r\n    } catch (err) {\r\n      console.error(err)\r\n      throw new Error('Django resolver failed to produce a valid object.')\r\n    }\r\n  } else {\r\n    throw new Error(stderr.trim())\r\n  }\r\n}\r\n\r\nfunction getRouterResolver(config: Config) {\r\n  try {\r\n    const routerJsonString = runPythonResolverScript(config)\r\n    const routerJsonObj = JSON.parse(routerJsonString)\r\n    return routerJsonObj as Resolver[]\r\n  } catch (err) {\r\n    console.error(err)\r\n    throw new Error('Could Not Load Django Router Object')\r\n  }\r\n}\r\n\r\nfunction posixSlash(str: string | null) {\r\n  if (!str) return str\r\n  return str.replace(/\\\\/g, '/')\r\n}\r\n\r\nfunction formatSvelteComponentFilepath(parent: string, str: string, config: any) {\r\n  if (str.length < 2) {\r\n    throw new Error(`${str} is not a valid component file.`)\r\n  }\r\n  const fname = `${str.slice(1)}.svelte`\r\n  return posixSlash(join(config.baseDirectory, parent, config.views ?? 'views', fname))\r\n}\r\n\r\nfunction formatSvelteComponentTagName(str: string) {\r\n  if (str.length < 2) return str\r\n  return str.charAt(1).toUpperCase() + str.slice(2).replace('$', '')\r\n}\r\n\r\nfunction capitaliseTagName(str: string) {\r\n  if (str.length === 0) return str\r\n  let ret = str.charAt(0).toUpperCase()\r\n  if (str.length === 1) return ret\r\n  return ret + str.slice(1)\r\n}\r\n\r\nfunction constructPathFromSegments(...segments: string[]) {\r\n  const path = segments.join('/')\r\n  const cleanPath = path.replace(/\\/\\/+/g, '/')\r\n  const trimmedPath = cleanPath.replace(/^\\/|\\/$/g, '')\r\n  return '/' + trimmedPath\r\n}\r\n\r\nfunction translateDjangoResolver(input: Resolver[], config: any) {\r\n  const { mainApp, baseDirectory } = config\r\n  if (typeof mainApp !== 'string' || typeof baseDirectory !== 'string') {\r\n    throw new Error('Malformed configuration in DxSvelte config.')\r\n  }\r\n  const router: Route[] = []\r\n  const traverse = (parent: Resolver | null, data: Pattern | Resolver) => {\r\n    if (data.type === 'resolver') {\r\n      if (!Array.isArray(data.url_patterns)) return null\r\n      data.url_patterns.map((item) => {\r\n        traverse({ ...data } as Resolver, item)\r\n      })\r\n    }\r\n    // We need to rework this massively. It's not enough to assume that every resolver marked to be included will be the child of an included view.\r\n    if (data.type === 'pattern') {\r\n      if (!parent || !parent.app_path) {\r\n        parent = {\r\n          app_path: mainApp,\r\n          type: 'resolver',\r\n          prefix: ''\r\n        }\r\n      }\r\n      if (!parent || !parent.app_path || typeof data.pattern !== 'string' || !data.name || data.name[0] !== '$') return null\r\n      const route = {\r\n        app: parent.app_path,\r\n        path: parent.prefix ? constructPathFromSegments(parent.prefix, data.pattern) : constructPathFromSegments(data.pattern),\r\n        view: data.name ?? null,\r\n        static: data.static_view,\r\n        component: data.name ? capitaliseTagName(parent.app_path) + formatSvelteComponentTagName(data.name) : null,\r\n        filename: data.name && parent.app_path ? formatSvelteComponentFilepath(parent.app_path, data.name, config) : null\r\n      }\r\n      router.push(route)\r\n    }\r\n  }\r\n  if (!Array.isArray(input)) return router\r\n  input.map((item) => traverse(null, item))\r\n  return router\r\n}\r\n\r\nexport function getDjangoRouter(config: Config) {\r\n  const resolvedRouter = getRouterResolver(config)\r\n  const translatedRouter = translateDjangoResolver(resolvedRouter, config ?? null)\r\n  return translatedRouter\r\n}", "import { execSync } from 'child_process'\nimport { readFileSync } from 'fs'\nimport { join } from 'path'\n\nlet pythonCmd: string|null = null\nlet pipCmd: string|null = null\n\nfunction checkPythonVersion(command: string) {\n  try {\n    const stdout = execSync(`${command} -V 2>/dev/null`, {\n      encoding: 'utf-8',\n      shell: process.env.SHELL\n    })\n    const match = stdout.match(/\\d+\\.\\d+\\.\\d+/)\n    if (match === null) return false\n    const version = match[0]\n    const [major, minor, patch] = version.split('.').map(Number)\n\n    if (major < 3) return false\n    if (major > 3) return [version, command]\n    if (minor < 10) return false\n    if (minor > 10) return [version, command]\n    if (patch < 7) return false\n\n    return [version, command]\n  } catch (error) {\n    return false\n  }\n}\n\nfunction initPythonCommands() {\n    const commands = ['python', 'python3', 'python3.11', 'python3.10', 'python3.12']\n\n    for (let command of commands) {\n      const versionArr = checkPythonVersion(command)\n  \n      if (versionArr) {\n        pythonCmd = versionArr[1]\n        if (pythonCmd) {\n          pipCmd = pythonCmd.replace('ython', 'ip')\n        }\n        return undefined\n      }\n    }\n  \n    throw new Error('A supported version of Python is not installed.')\n}\n\nexport function getPythonCommand() {\n    if (!pythonCmd) {\n        initPythonCommands()\n    }\n    return pythonCmd\n}\n\nexport function getPipCommand() {\n    if (!pipCmd) {\n        initPythonCommands()\n    }\n    return pipCmd\n}\n\nlet mainApp: string|null = null\n\nfunction initMainAppName() {\n  const rxFunctionString = /os\\.environ\\.setdefault\\(\\s*(\"DJANGO_SETTINGS_MODULE\"|'DJANGO_SETTINGS_MODULE')\\s*,\\s*(\"(.+)\\.settings\"|'(.+)\\.settings')\\)/\n  const settingsStr = readFileSync(join(process.cwd(), 'manage.py'), 'utf8')\n  const settingsStrExtract = settingsStr.match(rxFunctionString) ?? []\n  const settingsModuleExtract = settingsStrExtract?.length > 3 ? settingsStrExtract[2].replaceAll('\"', '').replaceAll(\"'\", '') : ''\n  if (settingsModuleExtract === '') {\n    throw new Error('Could not extract settings from manage.py. Exiting.')\n  }\n  const mainModuleExtract = settingsModuleExtract.split('.')\n  const mainModuleStr = mainModuleExtract[0]\n  mainApp = mainModuleStr\n  return undefined\n}\n\nexport function getMainAppName() {\n  if (!mainApp) {\n    initMainAppName()\n  }\n  return mainApp\n}"],
  "mappings": "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",
  "names": ["path", "baseDirectory", "execSync", "join", "readFileSync", "dirname", "join", "readFileSync", "join", "join", "router", "path", "join"]
}
